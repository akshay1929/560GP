<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IWzPpy/+B5t0gL1DKIueAAAAAElFTkSuQmCC
</value>
  </data>
</root>