<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>